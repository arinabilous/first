In order to collaborate, you and Sally need:

	A complete replica of the project on your own computers

	A way to keep track of and review each other's work

	Access to a definitive project version


You can accomplish all of this by using remotes.
 A remote is a shared Git repository
 that allows multiple collaborators to work on the same Git project 
from different locations. 
Collaborators work on the project independently, 
and merge changes together when they are ready to do so.

	
	git clone
Sally has created the remote repository, science-quizzes in the directory curriculum,
 which teachers on the school's shared network have access to. In order to get your own replica of science-quizzes, 
you'll need to clone it with:

	git clone remote_location clone_name

In this command: 

remote_location tells Git where to go to find the remote. 
This could be a web address, or a filepath, such as:

	/Users/teachers/Documents/some-remote

clone_name is the name you give to the directory in which Git will clone the repository.



You can see a list of a Git project's remotes with the command:

	git remote -v

					git fetch
An easy way to see if changes have been made to the remote and bring the changes down to your local copy is with:

	git fetch
This command will not merge changes from the remote into your local repository. 
It brings those changes onto what's called a remote branch. 


 the git merge command
 to integrate origin/master into your local master branch. The command:

     git merge origin/master

	Git workflow

Fetch and merge changes from the remote
Create a branch to work on a new project feature
Develop the feature on your branch and commit your work
Fetch and merge from the remote again (in case new commits were made while you were working)
Push your branch up to the remote for review
Steps 1 and 4 are a safeguard against merge conflicts, 
which occur when two branches contain file changes that cannot be merged with the git merge command.


The command:
	git push origin your_branch_name
will push your branch up to the remote, origin.

			generalizations
A remote is a Git repository that lives outside your Git project folder. 
Remotes can live on the web, on a shared network or even in a separate folder on your local computer.
The Git Collaborative Workflow are steps that enable smooth project development
 when multiple collaborators are working on the same Git project.
We also learned the following commands

git clone: Creates a local copy of a remote.
git remote -v: Lists a Git project's remotes.
git fetch: Fetches work from the remote into the local copy.
git merge origin/master: Merges origin/master into your local branch.
git push origin <branch_name>: Pushes a local branch to the origin remote.
Git projects are usually managed on Github, a website that hosts Git projects for millions of users. 
With Github you can access your projects from anywhere in the world by using the basic workflow you learned here.
